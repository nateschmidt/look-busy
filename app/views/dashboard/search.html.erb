<div class="container py-4">
  <div class="row mb-4">
    <div class="col-12">
      <h1 class="h3 mb-3">
        <i class="bi bi-search me-2"></i>Search Todo Items
      </h1>
      
      <!-- Search Form -->
      <div class="card shadow">
        <div class="card-body">
          <%= form_with url: search_dashboard_path, method: :get, local: true, class: "row g-3" do |form| %>
            <div class="col-md-8">
              <%= form.text_field :query, 
                  value: @query,
                  class: "form-control form-control-lg", 
                  placeholder: "Search in todo descriptions and notes...",
                  autofocus: true %>
            </div>
            <div class="col-md-4">
              <%= form.submit "Search", class: "btn btn-primary btn-lg w-100" %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <!-- Results -->
  <% if @query.present? || @todo_items.any? %>
    <div class="card shadow">
      <div class="card-header bg-secondary text-white">
        <div class="d-flex justify-content-between align-items-center">
          <h3 class="h5 mb-0">
            <% if @query.present? %>
              Search Results for "<%= @query %>" (<%= @todo_items.count %> items)
            <% else %>
              Recent Todo Items (<%= @todo_items.count %> items)
            <% end %>
          </h3>
          <% if @query.present? %>
            <%= link_to "Clear Search", search_dashboard_path, class: "btn btn-sm btn-outline-light" %>
          <% end %>
        </div>
      </div>
      
      <div class="card-body p-0">
        <% if @todo_items.any? %>
          <div class="table-responsive">
            <table class="table table-hover mb-0">
              <thead class="table-light">
                <tr>
                  <th>Date</th>
                  <th>Description</th>
                  <th>Type</th>
                  <th>Status</th>
                  <th>Notes</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% @todo_items.each do |todo_item| %>
                  <tr>
                    <td>
                      <small class="text-muted">
                        <%= todo_item.week_start_date.strftime("%b %d, %Y") %>
                        <br>
                        <span class="text-muted">Week <%= todo_item.week_start_date.cweek %></span>
                      </small>
                    </td>
                    <td>
                      <div class="<%= 'text-decoration-line-through text-muted' if todo_item.completed? %>">
                        <%= todo_item.description %>
                      </div>
                    </td>
                    <td>
                      <% case todo_item.source_type %>
                        <% when 'RecurringMeeting' %>
                          <span class="badge bg-primary">Meeting</span>
                        <% when 'Goal' %>
                          <span class="badge bg-success">Goal</span>
                        <% when 'AdHocTodo' %>
                          <% if todo_item.source.description.end_with?(' m') %>
                            <span class="badge bg-primary">Meeting</span>
                          <% else %>
                            <span class="badge bg-warning text-dark">Ad Hoc</span>
                          <% end %>
                      <% end %>
                    </td>
                    <td>
                      <% if todo_item.completed? %>
                        <span class="badge bg-success">
                          <i class="bi bi-check-circle me-1"></i>Completed
                        </span>
                      <% else %>
                        <span class="badge bg-secondary">
                          <i class="bi bi-circle me-1"></i>Incomplete
                        </span>
                      <% end %>
                    </td>
                    <td>
                      <% if todo_item.notes.any? %>
                        <button class="btn btn-sm btn-outline-secondary" 
                                data-bs-toggle="tooltip" 
                                data-bs-placement="top"
                                title="Click to view/edit notes"
                                onclick="viewNotes(<%= todo_item.id %>, <%= todo_item.week_start_date.year %>, <%= todo_item.week_start_date.cweek %>)"
                                style="cursor: pointer;">
                          <i class="bi bi-journal-text"></i>
                          <%= todo_item.notes.count %>
                        </button>
                      <% else %>
                        <span class="text-muted">-</span>
                      <% end %>
                    </td>
                    <td>
                      <div class="btn-group btn-group-sm" role="group">
                        <!-- View/Edit Notes Button -->
                        <% if todo_item.notes.any? %>
                          <button class="btn btn-outline-primary" 
                                  data-bs-toggle="tooltip" 
                                  data-bs-placement="top"
                                  title="View/Edit Notes"
                                  onclick="viewNotes(<%= todo_item.id %>, <%= todo_item.week_start_date.year %>, <%= todo_item.week_start_date.cweek %>)">
                            <i class="bi bi-journal-text"></i>
                          </button>
                        <% else %>
                          <button class="btn btn-outline-secondary" 
                                  data-bs-toggle="tooltip" 
                                  data-bs-placement="top"
                                  title="Add Notes"
                                  onclick="addNotes(<%= todo_item.id %>, <%= todo_item.week_start_date.year %>, <%= todo_item.week_start_date.cweek %>)">
                            <i class="bi bi-journal-plus"></i>
                          </button>
                        <% end %>
                        
                        <!-- Toggle Completion Button -->
                        <button class="btn <%= todo_item.completed? ? 'btn-outline-warning' : 'btn-outline-success' %>" 
                                data-bs-toggle="tooltip" 
                                data-bs-placement="top"
                                title="<%= todo_item.completed? ? 'Mark Incomplete' : 'Mark Complete' %>"
                                onclick="toggleCompletion(<%= todo_item.id %>, <%= todo_item.completed? %>)">
                          <i class="bi bi-<%= todo_item.completed? ? 'arrow-counterclockwise' : 'check-circle' %>"></i>
                        </button>
                        
                        <!-- Delete Button -->
                        <button class="btn btn-outline-danger" 
                                data-bs-toggle="tooltip" 
                                data-bs-placement="top"
                                title="Delete Todo"
                                onclick="deleteTodo(<%= todo_item.id %>)">
                          <i class="bi bi-trash"></i>
                        </button>
                      </div>
                    </td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        <% else %>
          <div class="text-center py-5">
            <i class="bi bi-search display-4 text-muted mb-3"></i>
            <h4 class="text-muted">No results found</h4>
            <p class="text-muted">Try adjusting your search terms or browse recent items below.</p>
          </div>
        <% end %>
      </div>
    </div>
  <% else %>
    <div class="text-center py-5">
      <i class="bi bi-search display-1 text-muted mb-3"></i>
      <h3 class="text-muted">Search Your Todo History</h3>
      <p class="text-muted mb-4">
        Enter a search term to find specific todo items across all your historical data.
      </p>
    </div>
  <% end %>
</div>

<!-- Note Modal -->
<div class="modal fade" id="noteModal" tabindex="-1" aria-labelledby="noteModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="noteModalLabel">
          <i class="bi bi-journal-text me-2"></i>Add Notes
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <%= form_with model: Note.new, local: true, id: "noteForm" do |form| %>
        <div class="modal-body">
          <p class="text-muted mb-3">Add or edit notes for this todo item:</p>
          
          <%= form.hidden_field :notable_type, id: "note_notable_type" %>
          <%= form.hidden_field :notable_id, id: "note_notable_id" %>
          <%= form.hidden_field :id, id: "note_id" %>
          
          <div class="mb-3">
            <%= form.text_area :content, 
                class: "form-control", 
                rows: 4,
                id: "note_content",
                placeholder: "Add your notes here..." %>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <%= form.submit "Add Notes", class: "btn btn-primary" %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  // Initialize tooltips and modal handlers
  document.addEventListener('DOMContentLoaded', function() {
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });

    // Handle modal form submission
    const noteForm = document.getElementById('noteForm');
    if (noteForm) {
      noteForm.addEventListener('submit', function() {
        // The form will submit normally and redirect back to the search page
        // The note will be created/updated
      });
    }

    // Handle modal cleanup when dismissed
    const noteModal = document.getElementById('noteModal');
    if (noteModal) {
      noteModal.addEventListener('hidden.bs.modal', function() {
        // Reset form
        const form = document.getElementById('noteForm');
        if (form) {
          form.reset();
          form.action = '/notes';
          form.method = 'POST';
        }
        
        // Reset modal title
        const modalTitle = document.getElementById('noteModalLabel');
        if (modalTitle) {
          modalTitle.innerHTML = '<i class="bi bi-journal-text me-2"></i>Add Notes';
        }
        
        // Reset submit button
        const submitButton = document.querySelector('#noteForm input[type="submit"]');
        if (submitButton) {
          submitButton.value = 'Add Notes';
        }
      });
    }
  });

  // Action functions
  function viewNotes(todoId, year, week) {
    // Fetch existing notes and show modal
    fetch(`/todo_items/${todoId}/notes`)
      .then(response => response.json())
      .then(data => {
        showNotesModal(todoId, data.notes, true);
      })
      .catch(error => {
        console.error('Error fetching notes:', error);
        alert('Failed to load notes');
      });
  }

  function addNotes(todoId, year, week) {
    // Show modal for adding new notes
    showNotesModal(todoId, [], false);
  }

  function showNotesModal(todoId, notes, isEdit) {
    const modal = document.getElementById('noteModal');
    const modalTitle = document.getElementById('noteModalLabel');
    const form = document.getElementById('noteForm');
    const contentField = document.getElementById('note_content');
    const submitButton = document.querySelector('#noteForm input[type="submit"]');
    
    // Set modal title
    if (isEdit && notes.length > 0) {
      modalTitle.innerHTML = '<i class="bi bi-journal-text me-2"></i>Edit Notes';
      contentField.value = notes.map(note => note.content).join('\n\n');
      submitButton.value = 'Update Notes';
    } else {
      modalTitle.innerHTML = '<i class="bi bi-journal-text me-2"></i>Add Notes';
      contentField.value = '';
      submitButton.value = 'Add Notes';
    }
    
    // Set form action and method
    if (isEdit && notes.length > 0) {
      form.action = `/notes/${notes[0].id}`;
      form.method = 'PATCH';
    } else {
      form.action = '/notes';
      form.method = 'POST';
    }
    
    // Set hidden fields
    document.getElementById('note_notable_type').value = 'TodoItem';
    document.getElementById('note_notable_id').value = todoId;
    if (isEdit && notes.length > 0) {
      document.getElementById('note_id').value = notes[0].id;
    } else {
      document.getElementById('note_id').value = '';
    }
    
    // Show modal
    const bsModal = new bootstrap.Modal(modal);
    bsModal.show();
  }

  function toggleCompletion(todoId, currentStatus) {
    if (confirm(currentStatus ? 'Mark this todo as incomplete?' : 'Mark this todo as complete?')) {
      fetch(`/todo_items/${todoId}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({
          todo_item: {
            completed: !currentStatus
          }
        })
      })
      .then(response => {
        if (response.ok) {
          // Reload the page to show updated status
          window.location.reload();
        } else {
          alert('Failed to update todo item');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to update todo item');
      });
    }
  }

  function deleteTodo(todoId) {
    if (confirm('Are you sure you want to delete this todo item? This action cannot be undone.')) {
      fetch(`/todo_items/${todoId}`, {
        method: 'DELETE',
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        }
      })
      .then(response => {
        if (response.ok) {
          // Reload the page to show updated list
          window.location.reload();
        } else {
          alert('Failed to delete todo item');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to delete todo item');
      });
    }
  }
</script>
